#!/bin/bash

#==========================================================
#功能：根据硬件版本生成STM8,STM32 单片机相应的udev rules文件.
#      并只针对/dev/ttyUSBx,/dev/ttyACMx 设备触发系统默认udev事件，
#      以便系统使用刚刚生成 的udev rules文件为STM8,STM32单片机设备
#      生成符号链接。这样就可以根据通道STM32)或底板MCU(STM8)，
#      生成固定文件。即此脚本主要功能是生成固定设备名，并完成
#      固定设备名与实现设备之间的映射关系(创建符号链接)。
#
#      固定设备名格式如下：
#      # tree /dev/opvx/
#      /dev/opvx/
#      ├── channel
#      │   ├── 11_12 -> ../../ttyACM5
#      │   ├── 1_2 -> ../../ttyACM0
#      │   ├── 13_14 -> ../../ttyACM6
#      │   ├── 15_16 -> ../../ttyACM7
#      │   ├── 3_4 -> ../../ttyACM1
#      │   ├── 5_6 -> ../../ttyACM2
#      │   ├── 7_8 -> ../../ttyACM3
#      │   └── 9_10 -> ../../ttyACM4
#      ├── debug
#      │   └── 1 -> ../../ttyACM8
#      └── mcu
#          └── 1 -> ../../ttyUSB1
#========================================================

#参数 $1 为底板MUC设备, 从此设备中获取版本信息
MCU_TTY_DEV=$1

APP_GET_DEV="/my_tools/get_dev"
APP_GET_VER="/my_tools/get_version"
APP_GET_VER_WAIT_TIME_MS=100
APP_GET_DEV_WAIT_TIME_MS=200
UDEV_RULE_FILE="/etc/udev/rules.d/20_opvx.rules"

HW_VER_1="V1.0"
HW_VER_2="V2.0"
HW_VER_TITLE="HW version"
HW_VER=""

USB_TYPE="SWG1032_BASED"
USB_TYPE_SWG="SWG1032_BASED"
USB_TYPE_VS_M35="VS_USB_M35"
DEV_TYPE="2U"
DEV_TYPE_TITLE="HW DevType"
SLOT_ID=

#udev生成的所有设备在/dev/$OPVX_DEV_ROOT目录下
OPVX_DEV_ROOT=opvx

#通道板设备目录/dev/$OPVX_DEV_ROOT/$CHAN_BRD_DIR
CHAN_BRD_DIR=chan_brd

#Debug通道目录/dev/$OPVX_DEV_ROOT/$DEBUG_DIR
DEBUG_DIR=debug

#模块板MCU /dev/$OPVX_DEV_ROOT/$MOD_BOARD_DIR
MOD_BOARD_DIR=mod_brd

function generate_udev_rules_title()
{
    cat > $UDEV_RULE_FILE << END_INPUT

# Autogenerated by $0 on `date`
# If you edit this file and execute $0 again,
# your manual changes will be LOST.
#
# Openvox hardware udev rules
#
#$HW_VER_TITLE : $1
#
END_INPUT
}

function generate_udev_rules_hw_ver_1()
{
    generate_udev_rules_title $1

    cat > $UDEV_RULE_FILE << END_INPUT
#Not implement yet !!!
END_INPUT
}

function generate_udev_rules_hw_ver_2()
{
    generate_udev_rules_title $1

    cat >> $UDEV_RULE_FILE << END_INPUT

#Create channel symbol links
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.4/1-1.2.4.2/1-1.2.4.2:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/0" 
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.4/1-1.2.4.3/1-1.2.4.3:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/1"
#DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.1/1-1.2.1.3/1-1.2.1.3:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/2"
#DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.1/1-1.2.1.4/1-1.2.1.4:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/3"
#DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.1/1-1.2.1.5/1-1.2.1.5:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/4"
#DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.1/1-1.2.1.6/1-1.2.1.6:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/5"
#DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.1/1-1.2.1.7/1-1.2.1.7:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/6"
#DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.2/1-1.2.2.3/1-1.2.2.3:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/7"

#Create debug device symbol link
#DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.4/1-1.2.4.4/1-1.2.4.4:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$DEBUG_DIR/0"

#Create board mcu symbol link
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.4/1-1.2.4.1/1-1.2.4.1:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$MOD_BOARD_DIR/0"

END_INPUT


}

function generate_udev_rules_hw_VS_M35_1U()
{
    generate_udev_rules_title $1

    cat >> $UDEV_RULE_FILE << END_INPUT
#$DEV_TYPE_TITLE : $DEV_TYPE
#

#Create channel symbol links
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.5/1-1.2.5.2/1-1.2.5.2:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/0"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.5/1-1.2.5.3/1-1.2.5.3:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/1"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.1/1-1.2.1.2/1-1.2.1.2:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/2"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.1/1-1.2.1.3/1-1.2.1.3:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/3"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.2/1-1.2.2.2/1-1.2.2.2:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/4"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.2/1-1.2.2.3/1-1.2.2.3:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/5"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.3/1-1.2.3.2/1-1.2.3.2:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/6"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.3/1-1.2.3.3/1-1.2.3.3:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/7"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.4/1-1.2.4.2/1-1.2.4.2:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/8"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.4/1-1.2.4.3/1-1.2.4.3:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/9"

#Create debug device symbol link
#DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.4/1-1.2.4.4/1-1.2.4.4:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$DEBUG_DIR/0"

#Create board mcu symbol link
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.5/1-1.2.5.1/1-1.2.5.1:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$MOD_BOARD_DIR/0"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.1/1-1.2.1.1/1-1.2.1.1:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$MOD_BOARD_DIR/1"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.2/1-1.2.2.1/1-1.2.2.1:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$MOD_BOARD_DIR/2"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.3/1-1.2.3.1/1-1.2.3.1:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$MOD_BOARD_DIR/3"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.4/1-1.2.4.1/1-1.2.4.1:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$MOD_BOARD_DIR/4"

END_INPUT

}
function generate_udev_rules_hw_VS_M35_2U()
{
    generate_udev_rules_title $1

    cat >> $UDEV_RULE_FILE << END_INPUT
#$DEV_TYPE_TITLE : $DEV_TYPE
#

#Create channel symbol links
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.5/1-1.2.5.2/1-1.2.5.2:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/0"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.5/1-1.2.5.3/1-1.2.5.3:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/1"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.6/1-1.2.6.6/1-1.2.6.6.2/1-1.2.6.6.2:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/2"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.6/1-1.2.6.6/1-1.2.6.6.3/1-1.2.6.6.3:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/3"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.6/1-1.2.6.5/1-1.2.6.5.2/1-1.2.6.5.2:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/4"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.6/1-1.2.6.5/1-1.2.6.5.3/1-1.2.6.5.3:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/5"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.1/1-1.2.1.2/1-1.2.1.2:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/6"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.1/1-1.2.1.3/1-1.2.1.3:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/7"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.2/1-1.2.2.2/1-1.2.2.2:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/8"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.2/1-1.2.2.3/1-1.2.2.3:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/9"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.6/1-1.2.6.1/1-1.2.6.1.2/1-1.2.6.1.2:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/10"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.6/1-1.2.6.1/1-1.2.6.1.3/1-1.2.6.1.3:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/11"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.6/1-1.2.6.2/1-1.2.6.2.2/1-1.2.6.2.2:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/12"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.6/1-1.2.6.2/1-1.2.6.2.3/1-1.2.6.2.3:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/13"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.3/1-1.2.3.2/1-1.2.3.2:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/14"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.3/1-1.2.3.3/1-1.2.3.3:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/15"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.4/1-1.2.4.2/1-1.2.4.2:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/16"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.4/1-1.2.4.3/1-1.2.4.3:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/17"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.6/1-1.2.6.4/1-1.2.6.4.2/1-1.2.6.4.2:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/18"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.6/1-1.2.6.4/1-1.2.6.4.3/1-1.2.6.4.3:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/19"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.6/1-1.2.6.3/1-1.2.6.3.2/1-1.2.6.3.2:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/20"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.6/1-1.2.6.3/1-1.2.6.3.3/1-1.2.6.3.3:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$CHAN_BRD_DIR/21"

#Create debug device symbol link
#DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.4/1-1.2.4.4/1-1.2.4.4:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$DEBUG_DIR/0"

#Create board mcu symbol link
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.5/1-1.2.5.1/1-1.2.5.1:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$MOD_BOARD_DIR/0"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.6/1-1.2.6.6/1-1.2.6.6.1/1-1.2.6.6.1:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$MOD_BOARD_DIR/1"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.6/1-1.2.6.5/1-1.2.6.5.1/1-1.2.6.5.1:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$MOD_BOARD_DIR/2"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.1/1-1.2.1.1/1-1.2.1.1:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$MOD_BOARD_DIR/3"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.2/1-1.2.2.1/1-1.2.2.1:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$MOD_BOARD_DIR/4"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.6/1-1.2.6.1/1-1.2.6.1.1/1-1.2.6.1.1:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$MOD_BOARD_DIR/5"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.6/1-1.2.6.2/1-1.2.6.2.1/1-1.2.6.2.1:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$MOD_BOARD_DIR/6"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.3/1-1.2.3.1/1-1.2.3.1:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$MOD_BOARD_DIR/7"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.4/1-1.2.4.1/1-1.2.4.1:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$MOD_BOARD_DIR/8"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.6/1-1.2.6.4/1-1.2.6.4.1/1-1.2.6.4.1:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$MOD_BOARD_DIR/9"
DEVPATH=="*devices/pci0000:00/0000:00:1d.0/usb1/1-1/1-1.2/1-1.2.6/1-1.2.6.3/1-1.2.6.3.1/1-1.2.6.3.1:1.0*", SYMLINK+="$OPVX_DEV_ROOT/$MOD_BOARD_DIR/10"

END_INPUT

}

function generate_udev_rules()
{
	tmp_usb_type=$1
	tmp_hw_ver=$2
#	echo "usb_type=$tmp_usb_type, hw_ver=$tmp_hw_ver"
	
	if [ x"$USB_TYPE_SWG" = x"$tmp_usb_type" ]; then
		if [ x"$HW_VER_1" == x"$tmp_hw_ver" ]; then
			generate_udev_rules_hw_ver_1 $1
		elif [ x"$HW_VER_2" == x"$tmp_hw_ver" ]; then
			generate_udev_rules_hw_ver_2 $1
		else
			echo "$0 : Unkown hardware version : $1"
			return
		fi
	elif [ x"$USB_TYPE_VS_M35" = x"$tmp_usb_type" -o x"UNDEF_TYPE" = x"$tmp_usb_type" ]; then
		if [ x"$DEV_TYPE" = x"1U" ]; then
			generate_udev_rules_hw_VS_M35_1U $1
		else
			generate_udev_rules_hw_VS_M35_2U $1
		fi
	fi

	sync
	#触发udev默认事件，以便生成软链接(SYMLINK)
	sleep 3 #等待之前的触发事件完成，再触发
	udevadm trigger --sysname-match=tty[AU]* 

	sleep 2
	udevadm control --reload
	sleep 2
	udevadm trigger -s usb --verbose
}

#获取硬件版本号
#====='APP_GET_VER'输出版本信息格式如下=======
#   SWG1032_BASED
#   HwVer : V2.0
#   SwVer : V2.0
#   Jan  8 2018
#   17:32:28
#=============================================
function get_brd_mcu_key_info()
{
	VS_USB_TYPE=`$APP_GET_VER $MCU_TTY_DEV $APP_GET_VER_WAIT_TIME_MS 2>&1 | sed -n "1p"`
	HW_VER=`$APP_GET_VER $MCU_TTY_DEV $APP_GET_VER_WAIT_TIME_MS 2>&1 |\
		grep "HwVer" |\
		awk -F":" '{print $2}' |\
		sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'` #去掉首尾空格

#	echo "VS_USB_TYPE=$VS_USB_TYPE, HW_VER=$HW_VER"
	if [ x"$VS_USB_TYPE" = x"$USB_TYPE_SWG"  -o x"$VS_USB_TYPE" = x"$USB_TYPE_VS_M35" ]; then
		USB_TYPE="$VS_USB_TYPE"
	else
		USB_TYPE="UNDEF_TYPE"
	fi

}

#获取设备类型：1U还是2U机箱，
function get_dev_type()
{
	DEV_TYPE=`$APP_GET_DEV $MCU_TTY_DEV $APP_GET_DEV_WAIT_TIME_MS 2>&1 |\
		grep "dev_type" |\
		awk -F":" '{print $2}' |\
		sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'` #去掉首尾空格
	SLOT_ID=`$APP_GET_DEV $MCU_TTY_DEV $APP_GET_DEV_WAIT_TIME_MS 2>&1 |\
		grep "slot_id" |\
		awk -F":" '{print $2}' |\
		sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'` #去掉首尾空格
}


#开机后硬件版本便确定，因此只需开机时生成rules文件，
#开机后插拔不用重新生成。

grep "$HW_VER_TITLE" $UDEV_RULE_FILE > /dev/null 2>&1
if [ 0 -eq $? ]
then
    #开机时清空$UDEV_RULE_FILE文件
    #文件已经存在，说明开机后已经生成过此文件，
    #不需要重新生成,只生成一次即可。
    echo ""
#    exit;
fi

function main()
{

	get_dev_type
	get_brd_mcu_key_info

	#获取生成$UDEV_RULE_FILE文件的slot id
	if [ -f $UDEV_RULE_FILE ]; then
		file_dev_type=`grep "$DEV_TYPE_TITLE" $UDEV_RULE_FILE | awk -F":" '{print $2}' | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'`
		if [ x"$file_dev_type" = x"$DEV_TYPE" -o x"$SLOT_ID" = x"1" ]; then
			echo "nothing do."
			exit 0
		fi
	fi
	
	generate_udev_rules $USB_TYPE $HW_VER
}

main $*
exit 0

