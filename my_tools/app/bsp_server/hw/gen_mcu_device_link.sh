#!/bin/bash

#==========================================================
#功能：根据硬件版本生成STM32 单片机相应的软链接文件.
#      生成符号链接。这样就可以根据通道(STM32)，
#      生成固定文件。即此脚本主要功能是生成固定设备名，并完成
#      固定设备名与实现设备之间的映射关系(创建符号链接)。
#
#      固定设备名格式如下：
#      /dev/opvx/
#      ├── chan_brd
#      │   ├── 0 -> ../../ttyACM0
#      │   ├── 1 -> ../../ttyACM1
#      │   ├── 10 -> ../../ttyACM12
#      │   ├── 11 -> ../../ttyACM13
#      │   ├── 12 -> ../../ttyACM14
#      │   ├── 13 -> ../../ttyACM15
#      │   ├── 14 -> ../../ttyACM16
#      │   ├── 15 -> ../../ttyACM5
#      │   ├── 2 -> ../../ttyACM2
#      │   ├── 3 -> ../../ttyACM4
#      │   ├── 4 -> ../../ttyACM6
#      │   ├── 5 -> ../../ttyACM8
#      │   ├── 6 -> ../../ttyACM10
#      │   ├── 7 -> ../../ttyACM3
#      │   ├── 8 -> ../../ttyACM9
#      │   └── 9 -> ../../ttyACM11

#========================================================

#参数 $1 为模块板MCU设备, 从此设备中获取版本信息
MB_MCU_DEV=

DEV_LINK_DIR=/dev/opvx
USB_BUS_DIR=/sys/bus/usb/devices
DEV_DIR=/dev

CHAN_ID=$1

usb_chan_nodeid_swg20xx=(1-1.2.1.1:1.0 \
	1-1.2.1.2:1.0 \
	1-1.2.1.3:1.0 \
	1-1.2.1.4:1.0 \
	1-1.2.1.5:1.0 \
	1-1.2.1.6:1.0 \
	1-1.2.1.7:1.0 \
	1-1.2.2.3:1.0 \
	1-1.2.5.4.1:1.0 \
	1-1.2.5.4.2:1.0 \
	1-1.2.5.4.3:1.0 \
	1-1.2.5.4.4:1.0 \
	1-1.2.5.4.5:1.0 \
	1-1.2.5.4.6:1.0 \
	1-1.2.5.4.7:1.0 \
	1-1.2.5.3:1.0)
usb_chan_nodeid_swg10xx=(1-1.2.3.1.1.3:1.0 \
	1-1.2.3.1.2.2:1.0 \
	1-1.2.3.2.1.1:1.0 \
	1-1.2.3.2.1.4:1.0 \
	1-1.2.3.1.4.3:1.0 \
	1-1.2.3.1.3.3:1.0 \
	1-1.2.3.3.2:1.0 \
	1-1.2.3.4.1:1.0 \
	1-1.2.4.1.1.3:1.0 \
	1-1.2.4.1.2.2:1.0 \
	1-1.2.4.2.1.1:1.0 \
	1-1.2.4.2.1.4:1.0 \
	1-1.2.4.1.4.3:1.0 \
	1-1.2.4.1.3.3:1.0 \
	1-1.2.4.3.2:1.0 \
	1-1.2.4.4.1:1.0)
usb_chan_nodeid_2u=(1-1.2.5.2:1.0 \
	1-1.2.5.3:1.0 \
	1-1.2.6.6.2:1.0 \
	1-1.2.6.6.3:1.0 \
	1-1.2.6.5.2:1.0 \
	1-1.2.6.5.3:1.0 \
	1-1.2.1.2:1.0 \
	1-1.2.1.3:1.0 \
	1-1.2.2.2:1.0 \
	1-1.2.2.3:1.0 \
	1-1.2.6.1.2:1.0 \
	1-1.2.6.1.3:1.0 \
	1-1.2.6.2.2:1.0 \
	1-1.2.6.2.3:1.0 \
	1-1.2.3.2:1.0 \
	1-1.2.3.3:1.0 \
	1-1.2.4.2:1.0 \
	1-1.2.4.3:1.0 \
	1-1.2.6.4.2:1.0 \
	1-1.2.6.4.3:1.0 \
	1-1.2.6.3.2:1.0 \
	1-1.2.6.3.3:1.0)
usb_chan_nodeid_1u=(1-1.2.5.2:1.0 \
	1-1.2.5.3:1.0 \
	1-1.2.1.2:1.0 \
	1-1.2.1.3:1.0 \
	1-1.2.2.2:1.0 \
	1-1.2.2.3:1.0 \
	1-1.2.3.2:1.0 \
	1-1.2.3.3:1.0 \
	1-1.2.4.2:1.0 \
	1-1.2.4.3:1.0)
usb_chan_nodeid_swg2008=(1-1.2.1.2:1.0 \
	1-1.2.1.3:1.0 \
	1-1.2.2.2:1.0 \
	1-1.2.2.3:1.0)
usb_chan_nodeid_vs2_8x=(1-1.1.1.7:1.0 \
	1-1.1.1.3:1.0 \
	1-1.1.1.2:1.0 \
	1-1.1.1.1:1.0 \
	1-1.1.1.5.7:1.0 \
	1-1.1.1.5.3:1.0 \
	1-1.1.1.5.2:1.0 \
	1-1.1.1.5.1:1.0 \
	1-1.1.2.7:1.0 \
	1-1.1.2.3:1.0 \
	1-1.1.2.2:1.0 \
	1-1.1.2.1:1.0 \
	1-1.1.2.5.7:1.0 \
	1-1.1.2.5.3:1.0 \
	1-1.1.2.5.2:1.0 \
	1-1.1.2.5.1:1.0 \
	1-1.1.3.7:1.0 \
	1-1.1.3.3:1.0 \
	1-1.1.3.2:1.0 \
	1-1.1.3.1:1.0 \
	1-1.1.3.5.7:1.0 \
	1-1.1.3.5.3:1.0 \
	1-1.1.3.5.2:1.0 \
	1-1.1.3.5.1:1.0 \
	1-1.1.4.7:1.0 \
	1-1.1.4.3:1.0 \
	1-1.1.4.2:1.0 \
	1-1.1.4.1:1.0 \
	1-1.1.4.5.7:1.0 \
	1-1.1.4.5.3:1.0 \
	1-1.1.4.5.2:1.0 \
	1-1.1.4.5.1:1.0)
usb_chan_nodeid_single_vs2_8x=(1-1.1.7:1.0 \
	1-1.1.3:1.0 \
	1-1.1.2:1.0 \
	1-1.1.1:1.0 \
	1-1.1.5.7:1.0 \
	1-1.1.5.3:1.0 \
	1-1.1.5.2:1.0 \
	1-1.1.5.1:1.0)


function gen_chan_dev_link()
{
	CHAN_ID=$((CHAN_ID - 1 ))
	MCU_ID=$((CHAN_ID / 2))
	usb_chan_nodeid_arr=($(echo "$@"))
	nodeid_count="${#usb_chan_nodeid_arr[*]}"
	if [ -d ${USB_BUS_DIR}/${usb_chan_nodeid_arr[$MCU_ID]}/tty ]; then
		tmp_dev_name=`ls ${USB_BUS_DIR}/${usb_chan_nodeid_arr[$MCU_ID]}/tty | grep ttyACM`
		if [ ! -z "$tmp_dev_name" ]; then
			ln -sf ${DEV_DIR}/${tmp_dev_name} ${DEV_LINK_DIR}/chan_brd/$MCU_ID
		fi
	fi
}

main()
{
	total_chan=`cat /tmp/hw_info.cfg |grep ^total_chan_count | awk -F '=' '{print $2}'`
	hw_ver=`cat /tmp/hw_info.cfg |grep ^hw_ver | awk -F '=' '{print $2}'`

	if [ -z $CHAN_ID ];then
		exit 1
	fi
	#check CHAN_ID value
	if [ $CHAN_ID -le 0 ];then
		exit 1	
	elif [ $CHAN_ID -gt $total_chan ];then
		exit 1
	fi

	if [ $total_chan -eq 8 ];then
		nodeid_arr=$(echo ${usb_chan_nodeid_swg2008[*]})
	elif [ $total_chan -eq 16 -o $total_chan -eq 32 ];then
		if [ x"$hw_ver" = x"1.0" ];then
			nodeid_arr=$(echo ${usb_chan_nodeid_swg10xx[*]})
		else
			nodeid_arr=$(echo ${usb_chan_nodeid_swg20xx[*]})
		fi
	elif [ $total_chan -eq 20 ];then
		nodeid_arr=$(echo ${usb_chan_nodeid_1u[*]})
	elif [ $total_dhan -eq 44 ];then
		nodeid_arr=$(echo ${usb_chan_nodeid_2u[*]})
	fi
	
	gen_chan_dev_link $nodeid_arr
}

main $*
exit 0
