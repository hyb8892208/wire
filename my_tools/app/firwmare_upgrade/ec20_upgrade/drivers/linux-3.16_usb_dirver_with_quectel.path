diff -rNu linux-source-3.16/drivers/usb/class/cdc-acm.c linux-source-3.16/drivers/usb_with_quectel/class/cdc-acm.c
--- linux-source-3.16/drivers/usb/class/cdc-acm.c	2018-05-08 11:01:12.824000000 +0800
+++ linux-source-3.16/drivers/usb_with_quectel/class/cdc-acm.c	2018-05-08 10:50:22.788000000 +0800
@@ -1420,6 +1420,11 @@
 		snd->urb->transfer_flags |= URB_NO_TRANSFER_DMA_MAP;
 		if (quirks & SEND_ZERO_PACKET)
 			snd->urb->transfer_flags |= URB_ZERO_PACKET;
+        
+#if 1 //Added by Quectel for zero packet
+        if (usb_dev->descriptor.idVendor == 0x1519 && usb_dev->descriptor.idProduct == 0x0020)
+            snd->urb->transfer_flags |= URB_ZERO_PACKET;
+#endif
 		snd->instance = acm;
 	}
 
@@ -1488,6 +1493,24 @@
 		usb_clear_halt(usb_dev, usb_sndbulkpipe(usb_dev, epwrite->bEndpointAddress));
 	}
 
+#if 1 //Added by Quectel
+    //For USB Auto Suspend
+    if((usb_dev->descriptor.idVendor == 0x1519) && (usb_dev->descriptor.idProduct == 0x0020))
+    {
+        pm_runtime_set_autosuspend_delay(&usb_dev->dev, 3000);
+        usb_enable_autosuspend(usb_dev);
+    }
+#endif
+
+
+#if 1 //Added by Quectel
+    //For USB Remote Wakeup
+    if ((usb_dev->descriptor.idVendor == 0x1519) && (usb_dev->descriptor.idProduct == 0x0020))
+    {
+        device_init_wakeup(&usb_dev->dev, 1); //usb remote wakeup
+    }
+#endif
+
 	return 0;
 alloc_fail8:
 	if (acm->country_codes) {
diff -rNu linux-source-3.16/drivers/usb/serial/option.c linux-source-3.16/drivers/usb_with_quectel/serial/option.c
--- linux-source-3.16/drivers/usb/serial/option.c	2018-05-08 11:01:16.456000000 +0800
+++ linux-source-3.16/drivers/usb_with_quectel/serial/option.c	2018-05-08 10:51:32.148000000 +0800
@@ -1820,6 +1820,20 @@
 	{ USB_DEVICE_INTERFACE_CLASS(0x2020, 0x4000, 0xff) },                /* OLICARD300 - MT6225 */
 	{ USB_DEVICE(INOVIA_VENDOR_ID, INOVIA_SEW858) },
 	{ USB_DEVICE(VIATELECOM_VENDOR_ID, VIATELECOM_PRODUCT_CDS7) },
+
+#if 1 //Added by Quectel
+    { USB_DEVICE(0x05C6, 0x9090) }, /* Quectel UC15 */
+    { USB_DEVICE(0x05C6, 0x9003) }, /* Quectel UC20 */
+    { USB_DEVICE(0x2C7C, 0x0125) }, /* Quectel EC25 */
+    { USB_DEVICE(0x2C7C, 0x0121) }, /* Quectel EC21 */
+    { USB_DEVICE(0x05C6, 0x9215) }, /* Quectel EC20 */
+    { USB_DEVICE(0x2C7C, 0x0191) }, /* Quectel EG91 */
+    { USB_DEVICE(0x2C7C, 0x0195) }, /* Quectel EG95 */
+    { USB_DEVICE(0x2C7C, 0x0306) }, /* Quectel EG06/EP06/EM06 */
+    { USB_DEVICE(0x2C7C, 0x0296) }, /* Quectel BG96 */
+    { USB_DEVICE(0x2C7C, 0x0435) }, /* Quectel AG35 */
+#endif
+
 	{ } /* Terminating entry */
 };
 MODULE_DEVICE_TABLE(usb, option_ids);
@@ -1854,6 +1868,11 @@
 #ifdef CONFIG_PM
 	.suspend           = usb_wwan_suspend,
 	.resume            = usb_wwan_resume,
+
+#if 1 //Added by Quectel
+    .reset_resume = usb_wwan_resume,
+#endif
+
 #endif
 };
 
@@ -1921,6 +1940,67 @@
 	    iface_desc->bInterfaceClass != USB_CLASS_CDC_DATA)
 		return -ENODEV;
 
+#if 1 //Added by Quectel
+    //Quectel UC20's interface 4 can be used as USB network device
+    if (serial->dev->descriptor.idVendor == cpu_to_le16(0x05C6) &&
+            serial->dev->descriptor.idProduct == cpu_to_le16(0x9003)
+            && serial->interface->cur_altsetting->desc.bInterfaceNumber >= 4)
+        return -ENODEV;
+    //Quectel EC20's interface 4 can be used as USB network device
+    if (serial->dev->descriptor.idVendor == cpu_to_le16(0x05C6) &&
+            serial->dev->descriptor.idProduct == cpu_to_le16(0x9215)
+            && serial->interface->cur_altsetting->desc.bInterfaceNumber >= 4)
+        return -ENODEV;
+    //Quectel EC25&EC21&EG91&EG95&EG06&EP06&EM06&BG96/AG35's interface 4 can be used as
+    //USB network device
+    if (serial->dev->descriptor.idVendor == cpu_to_le16(0x2C7C)
+            && serial->interface->cur_altsetting->desc.bInterfaceNumber >= 4)
+        return -ENODEV;
+#endif
+
+#if 1 //Added by Quectel
+    //For USB Auto Suspend
+    if (serial->dev->descriptor.idVendor == cpu_to_le16(0x05C6) &&
+            serial->dev->descriptor.idProduct == cpu_to_le16(0x9090)) {
+        pm_runtime_set_autosuspend_delay(&serial->dev->dev, 3000);
+        usb_enable_autosuspend(serial->dev);
+    }
+    if (serial->dev->descriptor.idVendor == cpu_to_le16(0x05C6) &&
+            serial->dev->descriptor.idProduct == cpu_to_le16(0x9003)) {
+        pm_runtime_set_autosuspend_delay(&serial->dev->dev, 3000);
+        usb_enable_autosuspend(serial->dev);
+    }
+    if (serial->dev->descriptor.idVendor == cpu_to_le16(0x05C6) &&
+            serial->dev->descriptor.idProduct == cpu_to_le16(0x9215)) {
+        pm_runtime_set_autosuspend_delay(&serial->dev->dev, 3000);
+        usb_enable_autosuspend(serial->dev);
+    }
+    if (serial->dev->descriptor.idVendor == cpu_to_le16(0x2C7C)) {
+        pm_runtime_set_autosuspend_delay(&serial->dev->dev, 3000);
+        usb_enable_autosuspend(serial->dev);
+    }
+#endif
+
+#if 1 //Added by Quectel
+    //For USB Remote Wakeup
+    if (serial->dev->descriptor.idVendor == cpu_to_le16(0x05C6) &&
+            serial->dev->descriptor.idProduct == cpu_to_le16(0x9090)) {
+        device_init_wakeup(&serial->dev->dev, 1); //usb remote wakeup
+    }
+    if (serial->dev->descriptor.idVendor == cpu_to_le16(0x05C6) &&
+            serial->dev->descriptor.idProduct == cpu_to_le16(0x9003)) {
+        device_init_wakeup(&serial->dev->dev, 1); //usb remote wakeup
+    }
+    if (serial->dev->descriptor.idVendor == cpu_to_le16(0x05C6) &&
+            serial->dev->descriptor.idProduct == cpu_to_le16(0x9215)) {
+        device_init_wakeup(&serial->dev->dev, 1); //usb remote wakeup
+    }
+    if (serial->dev->descriptor.idVendor == cpu_to_le16(0x2C7C)) {
+        device_init_wakeup(&serial->dev->dev, 1); //usb remote wakeup
+    }
+#endif
+
+
 	/* Store device id so we can use it during attach. */
 	usb_set_serial_data(serial, (void *)id);
 
diff -rNu linux-source-3.16/drivers/usb/serial/qcserial.c linux-source-3.16/drivers/usb_with_quectel/serial/qcserial.c
--- linux-source-3.16/drivers/usb/serial/qcserial.c	2018-05-08 11:01:15.768000000 +0800
+++ linux-source-3.16/drivers/usb_with_quectel/serial/qcserial.c	2018-05-08 10:50:57.232000000 +0800
@@ -92,7 +92,9 @@
 	{USB_DEVICE(0x03f0, 0x241d)},	/* HP Gobi 2000 QDL device (VP412) */
 	{USB_DEVICE(0x03f0, 0x251d)},	/* HP Gobi 2000 Modem device (VP412) */
 	{USB_DEVICE(0x05c6, 0x9214)},	/* Acer Gobi 2000 QDL device (VP413) */
+#if 0 // Added by Quectel, USB_DEVICE(0x05c6, 0x9215) is used for EC20
 	{USB_DEVICE(0x05c6, 0x9215)},	/* Acer Gobi 2000 Modem device (VP413) */
+#endif
 	{USB_DEVICE(0x05c6, 0x9264)},	/* Asus Gobi 2000 QDL device (VR305) */
 	{USB_DEVICE(0x05c6, 0x9265)},	/* Asus Gobi 2000 Modem device (VR305) */
 	{USB_DEVICE(0x05c6, 0x9234)},	/* Top Global Gobi 2000 QDL device (VR306) */
diff -rNu linux-source-3.16/drivers/usb/serial/usb_wwan.c linux-source-3.16/drivers/usb_with_quectel/serial/usb_wwan.c
--- linux-source-3.16/drivers/usb/serial/usb_wwan.c	2018-05-08 11:01:15.256000000 +0800
+++ linux-source-3.16/drivers/usb_with_quectel/serial/usb_wwan.c	2018-05-08 10:50:42.624000000 +0800
@@ -471,6 +471,20 @@
 			  usb_sndbulkpipe(serial->dev, endpoint) | dir,
 			  buf, len, callback, ctx);
 
+    #if 1 //Added by Quectel for zero packet
+    if (dir == USB_DIR_OUT) {
+        struct usb_device_descriptor *desc = &serial->dev->descriptor;
+        if (desc->idVendor == cpu_to_le16(0x05C6) && desc->idProduct == cpu_to_le16(0x9090))
+            urb->transfer_flags |= URB_ZERO_PACKET;
+        if (desc->idVendor == cpu_to_le16(0x05C6) && desc->idProduct == cpu_to_le16(0x9003))
+            urb->transfer_flags |= URB_ZERO_PACKET;
+        if (desc->idVendor == cpu_to_le16(0x05C6) && desc->idProduct == cpu_to_le16(0x9215))
+            urb->transfer_flags |= URB_ZERO_PACKET;
+        if (desc->idVendor == cpu_to_le16(0x2C7C))
+            urb->transfer_flags |= URB_ZERO_PACKET;
+    }
+    #endif
+
 	return urb;
 }
 
