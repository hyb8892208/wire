#!/bin/sh
# Copyright (C) 2015 PIVA Software <www.pivasoftware.com>
# 	Author: MOHAMED Kallel <mohamed.kallel@pivasoftware.com>

#############################
#   Entry point functuons   #
#############################

prefix_list="$prefix_list $DMROOT.WANDevice."
entry_execute_method_list="$entry_execute_method_list entry_execute_method_root_WANDevice"
entry_execute_method_list_forcedinform="$entry_execute_method_list_forcedinform entry_execute_method_root_WANDevice"
 

entry_execute_method_root_WANDevice() {
	case "$1" in ""|"$DMROOT."|"$DMROOT.WANDevice."*)
		common_execute_method_obj "$DMROOT.WANDevice." "0"
		common_execute_method_param "$DMROOT.WANDevice.AddressingType" "0" "wan_device_get_addressing_type" "" "" "1"
		common_execute_method_param "$DMROOT.WANDevice.IP" "0" "wan_device_get_ip_address" "" "" "1" 
		common_execute_method_param "$DMROOT.WANDevice.MAC" "0" "wan_device_get_mac_address" "" "" "1"
		common_execute_method_param "$DMROOT.WANDevice.SubnetMask" "0" "wan_device_get_subnet_mask" "" "" "1"
		common_execute_method_param "$DMROOT.WANDevice.DefaultGateway" "0" "wan_device_get_default_gateway" "" "" "1"
		return 0
		;;
	esac
	return $E_INVALID_PARAMETER_NAME;
}


CheckIPAddr() {
	echo $1|grep "^[0-9]\{1,3\}\.\([0-9]\{1,3\}\.\)\{2\}[0-9]\{1,3\}$" > /dev/null; 
	if [ $? -ne 0 ] 
	then
		return 1
	fi
	ipaddr=$1
	a=`echo $ipaddr|awk -F . '{print $1}'`
	b=`echo $ipaddr|awk -F . '{print $2}'`
	c=`echo $ipaddr|awk -F . '{print $3}'`
	d=`echo $ipaddr|awk -F . '{print $4}'`
	for num in $a $b $c $d
	do
		 if [ $num -gt 255 ] || [ $num -lt 0 ]
		 then 
		 	return 1
		 fi 
	done 
		return 0
}
#######################################
#   Data model parameters functions   #
#######################################


wan_device_get_addressing_type()
{
	local val
	val=`proc_config -g -c ""  -k DHCP -f /etc/network/interface.eth0`
	[ "X$val" = "Xno" ] && val="static"
	[ "X$val" = "Xyes" ] && val="dhcp"
	echo $val
}

wan_device_set_addressing_type() {
	local val=$(echo $1 | tr '[A-Z]' '[a-z]') 
	if [ "X$val" = "Xstatic" ]; then
		proc_config -s -c ""  -k DHCP -v no -e 1  -f /etc/network/interface.eth0
		/etc/init.d/network restart
	elif [ "X$val" = "Xdhcp" ]; then
	        proc_config -s -c ""  -k DHCP -v yes -e 1  -f /etc/network/interface.eth0 
	        /etc/init.d/network restart    
	else 
		return $E_INVALID_PARAMETER_VALUE
	
	fi	
	return 0
}

wan_device_get_ip_address() {
	local val=`ifconfig eth0 |grep "inet addr:"|awk '{print $2}'|awk -F: '{print $2}'`
	echo $val
} 
wan_device_set_ip_address() {
        local val                                                                                                                           
        
        val=`proc_config -g -c ""  -k DHCP -f /etc/network/interface.eth0`                                                                          
	[ "X$val" = "Xyes" ] && return $E_REQUEST_DENIED    
	
	val=$1
	if CheckIPAddr $val ; then
		proc_config -s -c ""  -k IPADDRESS -v $val -e 1  -f /etc/network/interface.eth0
        else
        	return $E_INVALID_PARAMETER_VALUE
        fi
        return 0                                                                                                                 
} 
wan_device_get_mac_address() {
	local val=`ifconfig eth0 |grep "eth0"|awk '{print $5}'`
	echo $val
}
wan_device_get_subnet_mask() {                                                            
        local val=`ifconfig eth0 |grep "inet addr:"|awk '{print $4}'|awk -F: '{print $2}'`
        echo $val                                         
}   
wan_device_set_subnet_mask() {                                                            
        local val                                                                            
        val=`proc_config -g -c ""  -k DHCP -f /etc/network/interface.eth0`                   
        [ "X$val" = "Xyes" ] && return $E_REQUEST_DENIED                                     
        
        val=$1                                                                               
       if CheckIPAddr $val; then                                                               
        	proc_config -s -c ""  -k GATEWAY -v $val -e 1  -f /etc/network/interface.eth0
                /etc/init.d/network restart      
        else                                                              
        	return $E_INVALID_PARAMETER_VALUE
        fi      
        return 0

}   
wan_device_get_default_gateway() {
	local val=`route -n |grep "UG"|awk '{print $2}'`
	echo $val
}


wan_device_set_default_gateway() {                        
	local val
	val=`proc_config -g -c ""  -k DHCP -f /etc/network/interface.eth0` 
	[ "X$val" = "Xyes" ] && return $E_REQUEST_DENIED
	val=$1
	if CheckIPAddr $val; then 
		proc_config -s -c ""  -k GATEWAY -v $val -e 1  -f /etc/network/interface.eth0
		/etc/init.d/network restart  
	else 
		return $E_INVALID_PARAMETER_VALUE
	fi 
	return 0
}
  
