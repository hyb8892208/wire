;; Read only,Don't Edit!
[macro-dial-failover]
exten => s,1,Set(ADEV=4)
exten => s,n,Set(AEXTEN_FLAG=5)
exten => s,n,Set(ACDR_NAME=6)
exten => s,n,Set(ARG=ARG)
exten => s,n,Set(MAX=128) 
exten => s,n(tryagain),Gotoif($["${ARG1}"=""]?dialstrnoforward)   ;;呼转号码为空时，跳转到dialnoforward
exten => s,n,Set(OUTDEV=${${EVAL(${ARG}${ADEV})}})               
exten => s,n,Gotoif($["${OUTDEV}"=""]?exit,1)                     ;;出局设备为空时，直接退出呼叫流程；否则继续执行
exten => s,n,Set(DIALSTR=${${EVAL(${ARG}${ADEV})}}/${ARG1})       ;;改被叫号为呼转号码
exten => s,n,Set(CDR_TOCHAN=${${EVAL(${ARG}${ACDR_NAME})}})       ;;设置CDR中TO字段名称
exten => s,n,Set(CDR_CALLEEID=${ARG1})                            ;;将呼转号码设为CDR的被叫字段
exten => s,n,Goto(dial)
exten => s,n(dialstrnoforward),Gotoif($["${ARG2}"=""]?dialstrnoexten)     ;;检查补叫号是否为空，为空则跳到dialstrnoexten
exten => s,n,Gotoif($["${ARG2}"="s"]?dialstrnoexten)               ;;被叫为s的时候（通常是fxo收到的呼叫），也跳到dialstrnoexten
exten => s,n,Gotoif($["${${EVAL(${ARG}${AEXTEN_FLAG})}}"="1"]?dialstrnoexten)  ;;被叫号标识为1的时候，也跳到dialstrnoexten
exten => s,n,Set(OUTDEV=${${EVAL(${ARG}${ADEV})}})               
exten => s,n,Gotoif($["${OUTDEV}"=""]?exit,1)                     ;;出局设备为空时，直接退出呼叫流程；否则继续执行
exten => s,n,Set(DIALSTR=${${EVAL(${ARG}${ADEV})}}/${ARG2})       ;;设置好拨号字串，被叫号还是传入的第2个变量
exten => s,n,Set(CDR_TOCHAN=${${EVAL(${ARG}${ACDR_NAME})}})       ;;设置CDR中TO字段名称
exten => s,n,Set(CDR_CALLEEID=${ARG2})                            ;;传入的原始被叫号设为CDR的被叫字段
exten => s,n,Goto(dial)
exten => s,n(dialstrnoexten),Set(DIALSTR=${${EVAL(${ARG}${ADEV})}})   ;;设置拨号字串，被叫号为空，通常是指被叫号为sip/iax2分机或中继
exten => s,n,Set(OUTDEV=${${EVAL(${ARG}${ADEV})}})                    ;;出局设备名就是拨号字串
exten => s,n,Gotoif($["${OUTDEV}"=""]?exit,1)
exten => s,n,Set(CDR_TOCHAN=${${EVAL(${ARG}${ACDR_NAME})}})           ;;第5个变量设为CDR的TO字段
exten => s,n,Set(CDR_CALLEEID=${${EVAL(${ARG}${ADEV})}})
exten => s,n,Set(CDR_CALLEEID=${STRREPLACE(CDR_CALLEEID,SIP/,)})
exten => s,n,Set(CDR_CALLEEID=${STRREPLACE(CDR_CALLEEID,IAX2/,)})
exten => s,n,Set(CDR_CALLEEID=${STRREPLACE(CDR_CALLEEID,-,@)})        ;;上面4条处理SIP和IAX分机/中继的被叫显示
exten => s,n(dial),Dial(${DIALSTR})                                   ;;正式呼出了
exten => s,n,Set(ADEV=${MATH(${ADEV}+3,int)})                         ;;设置failover的第1个呼出设备号为变量ARG7，没有failover的时候就为空值
exten => s,n,Set(AEXTEN_FLAG=${MATH(${AEXTEN_FLAG}+3,int)})
exten => s,n,Set(ACDR_NAME=${MATH(${ACDR_NAME}+3,int)})               ;;上面3行是处理failover的，第1个failover通道变量为ARG7,8，9，第2个为10,11，12类推。
exten => s,n,Gotoif($["${DIALSTATUS}"="CHANUNAVAIL"]?failover)        ;;sip通道不可用的时候
exten => s,n,Gotoif($["${DIALSTATUS}"="CONGESTION"]?failover)         ;;gsm通道不可用（没插卡）或忙的的时候
exten => s,n,Gotoif($["${DIALSTATUS}"="NOANSWER"]?nocarrier,1)         ;;除了上面两个状态是走failover流程，其他的走hangup
exten => s,n,Gotoif($["${DIALSTATUS}"="DONTCALL"]?dohangup,1)
exten => s,n,Gotoif($["${DIALSTATUS}"="CANCEL"]?dohangup,1)
exten => s,n,Gotoif($["${DIALSTATUS}"="TORTURE"]?dohangup,1)
exten => s,n,Gotoif($["${DIALSTATUS}"="ANSWER"]?dohangup,1)
exten => s,n,Gotoif($["${DIALSTATUS}"="BUSY"]?nocarrier,1)
exten => s,n(failover),NoOp("run into failover")  ;;进入挂机流程
exten => s,n(failover),Gotoif($[${ADEV}>${MAX}]?exit,1)              ;;变量超限，退出
exten => s,n(failover),Gotoif($[${LEN(${${ARG}${ADEV}})}>0]?tryagain:docongestion,1)     ;;出局设备变量不为空的话，进入failover重试 ；为空就进入阻塞       
exten => nocarrier,1,NoOp("run into nocarrier")  ;;运营商或者对方挂机
exten => nocarrier,n,Set(__${ARG3}=nocarrier)
exten => nocarrier,n,Goto(exit,1)
exten => dohangup,1,NoOp("run into Hangup")  ;;进入挂机流程                                                                              
exten => dohangup,n,Set(__${ARG3}=hangup)    ;;将传入的RET变量状态设为hangup再传回去                                                                             
exten => dohangup,n,Goto(exit,1)             ;;退出dial-failover宏规则 
exten => docongestion,1,NoOp("run into congestion")
exten => docongestion,n,Set(__${ARG3}=congestion)                                                                                                                               
exten => docongestion,n,Goto(exit,1)            
exten => exit,1,NoOp(${RET})                                                                                               
exten => exit,n,ChannelHangup(${CDR_TOCHAN})                                                                               
exten => exit,n,MacroExit()  

;;define macro-disa 
[macro-disa]
exten => s,1,Set(TIMEOUT(digit)=5)
exten => s,n,Set(TIMEOUT(response)=${ARG4})
exten => s,n,Authenticate(${ARG2},${ARG3})
exten => s,n,DISA(no-password,${ARG1})

;;define marco-auth
[macro-Auth]
exten => s,1,Set(TIMEOUT(digit)=5)
exten => s,n,Set(TIMEOUT(response)=${ARG3})
exten => s,n,Authenticate(${ARG1},,${ARG2})

