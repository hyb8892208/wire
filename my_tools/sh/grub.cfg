#
# DO NOT EDIT THIS FILE
#
# It is automatically generated by grub-mkconfig using templates
# from /etc/grub.d and settings from /etc/default/grub
#

### set default value
set boot_stat=0
set curr_area=1
set boot_disk=0

### BEGIN /etc/grub.d/00_header ###

set boot_current_kernel=${current_kernel}
#echo 'boot, current_kernel='"${current_kernel}"
if [ -f (hd0,gpt6)/grubcfg/grubenv ]; then
    set have_grubenv=true
    load_env -f (hd0,gpt6)/grubcfg/grubenv
    set boot_disk=hd0
elif [ -f (hd1,gpt6)/grubcfg/grubenv ]; then
    set have_grubenv=true
    load_env -f (hd1,gpt6)/grubcfg/grubenv
    set boot_disk=hd1
fi

if [ x"${boot_stat}" = x1 ]; then
    set boot_stat=0
    save_env -f (${boot_disk},gpt6)/grubcfg/grubenv boot_stat
    if [ x"${curr_area}" != x2 ]; then
	set curr_area=1
    fi
    save_env -f (${boot_disk},gpt6)/grubcfg/grubenv curr_area
else
    set boot_stat=0
    save_env -f (${boot_disk},gpt6)/grubcfg/grubenv boot_stat
    if [ x"${curr_area}" = x1 ]; then
	set curr_area=2
    else
	set curr_area=1
    fi
    save_env -f (${boot_disk},gpt6)/grubcfg/grubenv curr_area
fi

if [ x"${current_kernel}" = x ]; then
    set current_kernel=kernel${curr_area}
fi
if [ x"${boot_current_kernel}" != x"{current_kernel}" ]; then
#    echo 'boot_current_kernel='"${boot_current_kernel}"
#    echo 'current_kernel='"${current_kernel}"
    set current_kernel=${boot_current_kernel}
    if [ x"${current_kernel}" = x"kernel1" ]; then
        set curr_area=1
    elif [ x"${current_kernel}" = x"kernel2" ]; then
        set curr_area=2
    fi
    save_env -f (${boot_disk},gpt6)/grubcfg/grubenv curr_area
fi
save_env -f (${boot_disk},gpt6)/grubcfg/grubenv current_kernel

if [ "${next_entry}" ] ; then
   set default="${next_entry}"
   set next_entry=
   save_env next_entry
   set boot_once=true
else
   set default="0"
fi

if [ x"${feature_menuentry_id}" = xy ]; then
  menuentry_id_option="--id"
else
  menuentry_id_option=""
fi

export menuentry_id_option

if [ "${prev_saved_entry}" ]; then
  set saved_entry="${prev_saved_entry}"
  save_env saved_entry
  set prev_saved_entry=
  save_env prev_saved_entry
  set boot_once=true
fi

function savedefault {
  if [ -z "${boot_once}" ]; then
    saved_entry="${chosen}"
    save_env saved_entry
  fi
}
function load_video {
  if [ x$feature_all_video_module = xy ]; then
    insmod all_video
  else
    insmod efi_gop
    insmod efi_uga
    insmod ieee1275_fb
    insmod vbe
    insmod vga
    insmod video_bochs
    insmod video_cirrus
  fi
}

if [ x$feature_default_font_path = xy ] ; then
   font=unicode
else
insmod part_gpt
insmod ext2
set root='${boot_disk},gpt3'
if [ x$feature_platform_search_hint = xy ]; then
  search --no-floppy --fs-uuid --set=root --hint-ieee1275='ieee1275//sas/disk@0,gpt3' --hint-bios=${boot_disk},gpt3 --hint-efi=${boot_disk},gpt3 --hint-baremetal=ahci1,gpt3  ${current_kernel}
else
  search --no-floppy --fs-uuid --set=root ${current_kernel}
fi
    font="/usr/share/grub/unicode.pf2"
fi

if loadfont $font ; then
  set gfxmode=auto
  load_video
  insmod gfxterm
  set locale_dir=$prefix/locale
  set lang=en_US
  insmod gettext
fi
terminal_output gfxterm
if [ "${recordfail}" = 1 ] ; then
  set timeout=-1
else
  if [ x$feature_timeout_style = xy ] ; then
    set timeout_style=menu
    set timeout=3
  # Fallback normal timeout code in case the timeout_style feature is
  # unavailable.
  else
    set timeout=3
  fi
fi
### END /etc/grub.d/00_header ###

### BEGIN /etc/grub.d/05_debian_theme ###
set menu_color_normal=cyan/blue
set menu_color_highlight=white/blue
### END /etc/grub.d/05_debian_theme ###

### BEGIN /etc/grub.d/10_linux ###
function gfxmode {
    set gfxpayload="${1}"
}
set linux_gfx_mode=
export linux_gfx_mode

set select_partition='(${boot_disk},gpt6)'

if [ x"${boot_current_kernel}" = x  ]; then
    echo "used old boot."
else
menuentry 'Linux 3.16.7 current kernel (Partition: mount at /gateway)' --class debian --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-simple-f150614a-b060-457f-bc4f-ed6547c29b11' {
        load_video
        insmod gzio
        if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
        insmod part_gpt
        insmod ext2
        if [ x$feature_platform_search_hint = xy ]; then
          search --no-floppy --label --set=root --hint-ieee1275='ieee1275//sas/disk@0,gpt2' --hint-bios=hd1,gpt2 --hint-efi=hd1,gpt2 --hint-baremetal=ahci1,gpt2 ${current_kernel}
        else
          search --no-floppy --label --set=root ${current_kernel}
        fi

	echo    'Loading' "${current_kernel}" 'Linux 3.16.7 ...'
        linux   /vmlinuz ro root=LABEL=${current_kernel} intel_pstate=disable quiet console=ttyS0,115200n8 
        echo    'Loading initial ramdisk ...'
        initrd  /initrd.img.gz
}
menuentry 'Linux 3.16.7 other kernel (Partition: mount at /gateway)' --class debian --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-simple-f150614a-b060-457f-bc4f-ed6547c29b11' {
        load_video
        insmod gzio
        if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
        insmod part_gpt
        insmod ext2
	set current_kernel=${other_kernel}
	save_env -f (${boot_disk},gpt6)/grubcfg/grubenv current_kernel
	if [ x"${curr_area}" = x1 ]; then
		set curr_area=2
	else
		set curr_area=1
	fi
	save_env -f (${boot_disk},gpt6)/grubcfg/grubenv curr_area
        if [ x$feature_platform_search_hint = xy ]; then
          search --no-floppy --label --set=root --hint-ieee1275='ieee1275//sas/disk@0,gpt2' --hint-bios=hd1,gpt2 --hint-efi=hd1,gpt2 --hint-baremetal=ahci1,gpt2 ${other_kernel}
        else
          search --no-floppy --label --set=root ${other_kernel}
        fi
        echo    'Loading' "${other_kernel}" 'Linux 3.16.7 ...'

        linux   /vmlinuz ro root=LABEL=${other_kernel} intel_pstate=disable quiet console=ttyS0,115200n8 
        echo    'Loading initial ramdisk ...'
        initrd  /initrd.img.gz
}
fi

if [ x"${curr_area}" = x1 ]; then
menuentry 'Customized (PartitionII: kernel-3.16.7, initrd: old) (PartitionIV: mount at /gateway)' --class debian --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-simple-f150614a-b060-457f-bc4f-ed6547c29b11' {
	load_video
	insmod gzio
	if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
	insmod part_gpt
	insmod ext2
	if [ x"${boot_disk}" = x"hd0" ]; then
		set root='hd0,gpt2'
	else
		set root='hd1,gpt2'
	fi

	echo	'Loading Openvox Customized kernel 3.16.7...'
	linux	/bzImage ro  quiet  console=ttyS0,115200n8 
	echo	'Loading Partition II: initrd_cpio.img.gz ...'
	initrd	/initrd_cpio.img.gz
}
fi


if [ x"${curr_area}" = x2 ]; then
menuentry 'Customized (PartitionIII: kernel-3.16.7, initrd: old) (PartitionV: mount at /gateway)' --class debian --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-simple-f150614a-b060-457f-bc4f-ed6547c29b11' {
	load_video
	insmod gzio
	if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
	insmod part_gpt
	insmod ext2
	if [ x"${boot_disk}" = x"hd0" ]; then
		set root='hd0,gpt3'
	else
		set root='hd1,gpt3'
	fi

	echo	'Loading Openvox Customized kernel 3.16.7...'
	linux	/bzImage ro  quiet  console=ttyS0,115200n8 
	echo	'Loading Partition III: initrd_cpio.img.gz ...'
	initrd	/initrd_cpio.img.gz
}
fi

menuentry 'Initrd GNU/Linux(bzImage)' --class debian --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-simple-f150614a-b060-457f-bc4f-ed6547c29b11' {
	load_video
	insmod gzio
	if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
	insmod part_gpt
	insmod ext2
	if [ x"${boot_disk}" = x"hd0" ]; then
		set root='hd0,gpt3'
	else
		set root='hd1,gpt3'
	fi

	echo	'Loading new kernel Linux 3.16.0-4-686-pae ...'
	#linux	/bzImage root=/dev/mmcblk0p4 rw  console=ttyS0,115200n8
	linux	/vmlinuz-3.16.0-4-686-pae root=/dev/mmcblk0p5 ro  quiet console=ttyS0,115200n8 
	echo	'Loading initial ramdisk ...'
	initrd	/initrd.img-3.16.0-4-686-pae
}

### END /etc/grub.d/10_linux ###

### BEGIN /etc/grub.d/20_linux_xen ###

### END /etc/grub.d/20_linux_xen ###

### BEGIN /etc/grub.d/30_os-prober ###
### END /etc/grub.d/30_os-prober ###

### BEGIN /etc/grub.d/30_uefi-firmware ###
### END /etc/grub.d/30_uefi-firmware ###

### BEGIN /etc/grub.d/40_custom ###
# This file provides an easy way to add custom menu entries.  Simply type the
# menu entries you want to add after this comment.  Be careful not to change
# the 'exec tail' line above.
### END /etc/grub.d/40_custom ###

### BEGIN /etc/grub.d/41_custom ###
if [ -f  ${config_directory}/custom.cfg ]; then
  source ${config_directory}/custom.cfg
elif [ -z "${config_directory}" -a -f  $prefix/custom.cfg ]; then
  source $prefix/custom.cfg;
fi
### END /etc/grub.d/41_custom ###
